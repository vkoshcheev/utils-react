import { useCloseModalOnClickOutside } from './hooks/useCloseModalOnClickOutside';
import { useComponentDidUpdate } from './hooks/useComponentDidUpdate';
import { useDisableScroll } from './hooks/useDisableScroll';
import { useIsClient } from './hooks/useIsClient';
import { useLocalStorage } from './hooks/useLocalStorage';
import { useModalStateHooks } from './hooks/useModalStateHooks';
import { WebVitals, useWebVitals } from './hooks/useWebVitals';
import { scrollToBlockRef } from './utils/scrollToBlockRef';
import { scrollToTop } from './utils/scrollToTop';
import { withOpacity } from './utils/css-and-styles/withOpacity';
import { addModifierToClass } from './utils/css-and-styles/addModifierToClass';
import { addModifierToClassWhenConditionIsTrue } from './utils/css-and-styles/addModifierToClassWhenConditionIsTrue';
import { getImageUrlForCss } from './utils/css-and-styles/getImageUrlForCss';
import { cacheImages } from './utils/cacheImages';
import { useScrollToTop } from './hooks/useScrollToTop';
export * from 'utils-js';
export { addModifierToClass, addModifierToClassWhenConditionIsTrue, getImageUrlForCss, withOpacity, cacheImages, scrollToBlockRef, scrollToTop, useCloseModalOnClickOutside, useComponentDidUpdate, useDisableScroll, useIsClient, useLocalStorage, useModalStateHooks, useScrollToTop, useWebVitals, };
export type { WebVitals };
